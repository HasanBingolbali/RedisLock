apiVersion: apps/v1
kind: Deployment
metadata:
  name: redislock-deployment
  labels:
    app: redislock
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redislock
  template:
    metadata:
      labels:
        app: redislock
    spec:
      containers:
        - name: redislock
          image: hasannaber123/redislock:latest
          ports:
            - containerPort: 8080 # Replace with your application's port
          env:
            - name: REDIS_HOST
              value: redis-service

---
apiVersion: v1
kind: Service
metadata:
  name: redislock-service
spec:
  selector:
    app: redislock
  ports:
    - protocol: TCP
      port: 80 # Port that the service will be exposed on
      targetPort: 8080 # Container port to forward to
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redislock-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
     - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: redislock-service
                port:
                  number: 80
